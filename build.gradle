apply plugin: 'java'
apply plugin: 'eclipse'

version = '0.4.5'

def APP_NAME = 'depDetectGui'
def FAT_JAR_BASE = 'release/depDetectGui'
def MAIN_CLASS = 'com.cm55.depDetect.gui.AppMain';

// バージョン番号を保持するJavaファイル
def VERSION_JAVA_FOLDER = 'src/com/cm55/depDetect/gui'
def VERSION_JAVA_FILE = VERSION_JAVA_FOLDER + '/Version.java'


// 全ソースがUTF-8であることを指定する
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

// Javaソースのバージョン
sourceCompatibility = 1.8

// 生成クラスのバージョン
targetCompatibility = 1.8

// 依存を取得する場合のリポジトリ
repositories {
  jcenter();
  maven { 
    url 'https://ysugimura.github.io/maven' 
  }
}

// 公開設定
task sourceJar(type: Jar) {
  from sourceSets.main.allJava
  classifier "sources"
}

// バージョンの設定
task versionSet(type: Copy) { 
  doFirst {
    delete VERSION_JAVA_FILE
  }
  from 'Version.java'
  into VERSION_JAVA_FOLDER
  expand(version: version) 
}

/* ソースセットの指定 */
sourceSets {
  main {
    java {
      srcDir 'src'; exclude '**/*Test.java'
    }
    resources {
      srcDir 'src'; exclude '**/*Test.java'
    }
  }
}

// このプロジェクトの依存ライブラリの指定
dependencies {    
  compile group: 'javax.inject', name: 'javax.inject', version: '1'
  compile(group: 'com.google.inject', name: 'guice', version: '4.1.0') {
    exclude module:'asm'
    exclude module:'cglib'
  }
  compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
  compile(group: 'com.cm55', name: 'eventBus', version: '1.1.0')
  compile(group: 'com.cm55', name: 'gsonwrapper', version: '1.0.1')
  compile(group: 'com.cm55', name: 'miniSerial', version: '1.1')
  compile group: 'com.h2database', name: 'h2', version: '1.4.193'
  compile(group: 'com.cm55', name: 'fxwrapper', version: '1.5.2')
  compile(group: 'com.cm55', name: 'depDetect', version: '1.3.1')
    
  testCompile group: 'org.mockito', name: 'mockito-core', version: '2.19.0'
  testCompile(group: 'junit', name: 'junit', version: '4.12') {
    exclude module:'hamcrest-core'
  }
  testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}


/* sourceSetsで同じフォルダを複数回指定すると、ご丁寧にもその分だけ
 * classPathに入れてしまう。重複した分を削除する
 */
def removeDuplicatedSources = { cp->
  def newList = new ArrayList()
  def duplicated = new HashSet()
  cp.entries.each { e-> 
    if (e.kind != 'src') {
      newList.add(e);
      return
    }
    if (duplicated.contains(e.path))
      return;
    newList.add(e);
    duplicated.add(e.path);          
  }
  cp.entries = newList;
}

// srcDir 'src'; exclude '**/*Test.java';のexcludeを削除する。
// IDE上ではテストユニットが見えていて欲しい
def removeAllExcludes = { cp->
  cp.entries.findAll{ it.kind == 'src' }.each{
    it.setExcludes(new ArrayList())  
  }
}

/* 勝手に指定されたoutputを削除する。
 * これがあると、勝手にAllow output folders for source foldersがONになってしまう。
 */
def removeOutputFoldersForSourceFolders = { cp->
  cp.entries.findAll{ it.kind == 'src' }.each{
    it.output = null
  }
}

def addOtherProjects = { cp->
  [
//  '/github_depDetect', 
//  '/github_fxwrapper',
//  '/github_miniSerial'
  ].each{
    cp.entries.add(
      new org.gradle.plugins.ide.eclipse.model.SourceFolder(it, null)
    )
  }
}

eclipse {
  classpath {          
    downloadSources=true
    file  {
      whenMerged {cp->
        removeDuplicatedSources(cp)
        removeOutputFoldersForSourceFolders(cp)
        removeAllExcludes(cp)
        addOtherProjects(cp)
      }
    }    
  }     
}

compileJava.dependsOn(['versionSet'])

// fat-jarを作成する。これはテスト用に作成するもので難読化とは無関係
task rel(type: Jar, dependsOn:jar) {

  // 出力先ファイル
  destinationDir = file('.')
  archiveName = FAT_JAR_BASE + '-' + version + '.jar'
  
  // 入力ファイル
  from { 
    configurations.compile.collect { zipTree(it) };
  }
  with jar
  
  // マニフェスト
  manifest {
    attributes 'Implementation-Title': APP_NAME, 'Implementation-Version': version
    attributes 'Main-Class': MAIN_CLASS
    exclude 'META-INF/DEPENDENCIES' 
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'   
    exclude 'META-INF/NOTICE'     
    exclude 'META-INF/NOTICE.txt' 
    exclude 'META-INF/maven/**' 
    exclude 'META-INF/services/**' 
  }
}
